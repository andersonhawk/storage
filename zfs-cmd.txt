### ZFS command line notes ###

# check imported zpool
	$zpool list
	$zpool list -v
	$zpool status
	$zpool status -v

# import zpool vdev (-D list destroy pool)
	$zpool import

# import and specified pool root directory
	$zpool import -f -R /media/zroot newsys

# export zpool vdev
	$zpool export newsys

# quota zfs capacity grow.
	$ zfs set quota=2G zroot/var/log
	$ zfs get quota zroot/var/log

### ZPool stripe/raid setup ###

## adjust zfs sector size
	$ sysctl vfs.zfs.min_auto_ashift = 12

## create a stripe pool ##
	$ zpool create mystripe /dev/vtbd0
	$ zpool add mystripe /dev/vtbd1

## create a mirror pool with spare VDEV ##
	$ zpool create mymirror mirror /dev/vtbd0 /dev/vtbd1 spare /dev/vtbd2
## create a write cache device with the pool ##
	$ zpool add mymirror log /dev/vtbd3
## create a read cache device with the pool ##
	$ zpool add mymirror cache /dev/vtbd4

## create a raid-10 pool (stripes over mirrors) ##
## pool myraid10 has two VDEVs: mirror-0, mirror-1. each VDEV includes
## two storage devices. zfs stripes data across all the VDEVs.
	$ zpool create myraid10 mirror /dev/vtbd0 /dev/vtbd1 \
		mirror /dev/vtbd2 /dev/vtbd3

## create a stripe data across over raidz VDEVs. ##
	$ zpool creat myraidz raidz1 /dev/vtbd0 /dev/vtbd1 /dev/vtbd2 \
		raidz1 /dev/vtbd3 /dev/vtbd4 /dev/vtbd5

## create a raidz pool (raid5-like) ##
	$ zpool create myraidz /dev/vtbd0 /dev/vtbd1 spare /dev/vtbd2

## remove device from pool ##
	$ zpool remove mymirror /dev/vtbd4
	$ zpool labelclear /dev/vtbd4

### FreeBSD ZFS boot system setup ###

# create partition layout
	$ gpart create -s gpt da1
	$ gpart add -a 4K -t freebsd-boot -s 256K da1
	$ gpart add -a 4K -t freebsd-swap -s 4G da1
	$ gpart add -a 4K -t freebsd-zfs -s 20G da1

# create zpool sys with freebsd-zfs partition
	$ zpool create -m /media sys da1p3

# create zfs layout
	$ zfs create sys/ROOT
	$ zfs set mountpoint=none sys
	$ zfs set mountpoint=none sys/ROOT

# create snapshot and save them to rollback on the pool (sys)
	$ zfs snapshot usbsys/ROOT/default@snap
	$ zfs list -t all
	$ zfs send usbsys/ROOT/default@snap > zfs_root_snap
	$ cat zfs_root_snap | zfs recv sys/ROOT/default

# or just with one command
	$ zfs send usbsys/ROOT/default@snap | zfs recv sys/ROOT/default
	$ zpool iostat -v sys 1

# setup boot loader
	$ gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 da1
	$ gpart set -a bootme -i 3 da1

# config zfs bootfs/mountpoint
	$ zpool set bootfs=sys/ROOT/default sys
	$ zfs umount sys/ROOT/default
	$ zfs set mountpoint=/media sys/ROOT/default

	vim /media/boot/loader.conf, add following two lines:
		zfs_load="YES"
		vfs.root.mountfrom="zfs:sys/ROOT/default"

	$ zfs umount sys/ROOT/default
	$ zfs set mountpoint=/ sys/ROOT/default

# reboot system.

### FreeBSD ZFS/UFS dual-boot system setup ###

# create partition layout
	$ gpart create -s gpt da1
        $ gpart add -a 4K -t freebsd-boot -s 256K da1
        $ gpart add -a 4K -t freebsd-swap -s 4G da1
        $ gpart add -a 4K -t freebsd-zfs -s 20G da1
	$ gpart add -a 4K -t freebsd-ufs -s 20G da1

# da1p3 for zfs boot system and da1p4 for ufs boot system, install two
# system on those partitions.

# setup boot loader for zfs system.
	$ gpart bootcode -b /boot/pmbr -p /boot/gptzfsboot -i 1 da1
	$ gpart set -a bootonce -i 3 da1.
	$ reboot

# setup boot loader for ufs system.
	$ gpart bootcode -b /boot/pmbr -p /boot/gptboot -i 1 da1
	$ gpart set -a bootonce -i 4 da1
	$ reboot
